---
export interface Props {
  title: string;
  description: string;
  outcome: string;
  stack: string[];
  slug: string;
  repoUrl?: string | null;
  liveUrl?: string | null;
}

const { title, description, outcome, stack, slug, repoUrl, liveUrl } = Astro.props;
---

<div class="card p-6 h-full flex flex-col hover:shadow-lg transition-all duration-300 ease-in-out group">
  <div class="flex-1">
    <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
      {title}
    </h3>
    
    <p class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">
      {description}
    </p>
    
    <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-3 mb-4">
      <div class="flex items-start space-x-2">
        <svg class="w-4 h-4 text-green-600 dark:text-green-400 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <p class="text-sm text-green-800 dark:text-green-300 font-medium">
          {outcome}
        </p>
      </div>
    </div>
    
    <!-- Tech Stack -->
    <div class="flex flex-wrap gap-2 mb-6">
      {stack.map((tech) => (
        <span class="inline-block px-3 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full">
          {tech}
        </span>
      ))}
    </div>
  </div>
  
  <!-- Actions -->
  <div class="flex flex-col sm:flex-row gap-3">
    <a
      href={`/projects/${slug}`}
      class="btn btn-primary flex-1 justify-center"
    >
      Read Case Study
    </a>
    
    <div class="flex gap-2">
      {repoUrl && (
        <a
          href={repoUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="btn btn-secondary px-4"
          aria-label={`View ${title} repository`}
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
        </a>
      )}
      
      {liveUrl && (
        <a
          href={liveUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="btn btn-secondary px-4"
          aria-label={`View ${title} live demo`}
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      )}
    </div>
  </div>
</div>